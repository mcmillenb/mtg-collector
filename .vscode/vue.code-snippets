{
  "Vue 3 Composition API Component": {
    "prefix": "vcomp",
    "body": [
      "<template>",
      "  <div>",
      "    $0",
      "  </div>",
      "</template>",
      "",
      "<script setup>",
      "import { ref, computed, onMounted } from 'vue'",
      "",
      "// Props",
      "const props = defineProps({",
      "  ${1:propName}: {",
      "    type: ${2:String},",
      "    required: ${3:true}",
      "  }",
      "})",
      "",
      "// Reactive state",
      "const ${4:state} = ref(${5:null})",
      "",
      "// Computed properties",
      "const ${6:computed${4/(.*)/${1:/pascalcase}/}} = computed(() => {",
      "  return ${4:state}.value",
      "})",
      "",
      "// Lifecycle",
      "onMounted(() => {",
      "  console.log('Component mounted')",
      "})",
      "</script>",
      "",
      "<style scoped>",
      "/* Component styles */",
      "</style>"
    ],
    "description": "Create a Vue 3 Composition API component"
  },
  "Inertia Page Component": {
    "prefix": "ipage",
    "body": [
      "<template>",
      "  <AppLayout title=\"${1:Page Title}\">",
      "    <template #header>",
      "      <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">",
      "        ${1:Page Title}",
      "      </h2>",
      "    </template>",
      "",
      "    <div class=\"py-12\">",
      "      <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">",
      "        <div class=\"bg-white overflow-hidden shadow-xl sm:rounded-lg\">",
      "          $0",
      "        </div>",
      "      </div>",
      "    </div>",
      "  </AppLayout>",
      "</template>",
      "",
      "<script setup>",
      "import AppLayout from '@/Layouts/AppLayout.vue'",
      "",
      "// Props from Inertia",
      "const props = defineProps({",
      "  ${2:data}: Object",
      "})",
      "</script>"
    ],
    "description": "Create an Inertia page component"
  },
  "Vue Composable": {
    "prefix": "vcomposable",
    "body": [
      "import { ref, computed, onMounted, onUnmounted } from 'vue'",
      "",
      "export function use${1:ComposableName}() {",
      "  // State",
      "  const ${2:state} = ref(${3:null})",
      "  const ${4:loading} = ref(false)",
      "",
      "  // Computed",
      "  const ${5:computed${2/(.*)/${1:/pascalcase}/}} = computed(() => {",
      "    return ${2:state}.value",
      "  })",
      "",
      "  // Methods",
      "  const ${6:methodName} = async () => {",
      "    ${4:loading}.value = true",
      "    try {",
      "      $0",
      "    } finally {",
      "      ${4:loading}.value = false",
      "    }",
      "  }",
      "",
      "  // Lifecycle",
      "  onMounted(() => {",
      "    ${6:methodName}()",
      "  })",
      "",
      "  return {",
      "    ${2:state},",
      "    ${4:loading},",
      "    ${5:computed${2/(.*)/${1:/pascalcase}/}},",
      "    ${6:methodName}",
      "  }",
      "}"
    ],
    "description": "Create a Vue 3 composable"
  }
}